# This is the name of the workflow, which will be displayed in the Actions tab of the GitHub repository.
name: Build & Deploy to Firebase

# This section defines when the workflow will run.
on:
  # 'workflow_dispatch' allows this workflow to be triggered manually from the GitHub UI.
  workflow_dispatch:
    # 'inputs' define the parameters that a user can provide when manually running the workflow.
    inputs:
      # 'flavor' is an input for selecting the product flavor of the Android app.
      flavor:
        description: 'Select flavor to build'
        required: true
        default: 'free'
        type: choice
        # The user can choose between 'free' and 'pro' flavors.
        options:
          - free
          - pro
      buildType:
        description: 'Select build type'
        required: true
        default: 'release'
        type: choice
        # The user can choose between 'debug' and 'release' build types.
        options:
          - debug
          - release

# This section defines the jobs to be executed in the workflow.
jobs:
  # 'build' is the only job in this workflow.
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Decode keystore
        run: |
          mkdir -p keystore
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > keystore/release-key.jks

      # This step builds the Android app using Gradle.
      - name: Build selected flavor
        env:
          storePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyAlias: ${{ secrets.KEY_ALIAS }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        run: |
          FLAVOR="${{ github.event.inputs.flavor }}"
          BUILD_TYPE="${{ github.event.inputs.buildType }}"
          TASK_NAME="assemble$(echo ${FLAVOR^})$(echo ${BUILD_TYPE^})"
          echo "Running Gradle task: $TASK_NAME"
          ./gradlew "$TASK_NAME"

      # This step uploads the generated APK to Firebase App Distribution.
      - name: Upload to Firebase App Distribution
        # It uses a third-party action 'wzieba/Firebase-Distribution-Github-Action'.
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          # The Firebase App ID is selected based on the chosen flavor.
          # If the flavor is 'free', it uses the 'FIREBASE_APP_ID_FREE' secret; otherwise, it uses 'FIREBASE_APP_ID_PRO'.
          appId: ${{ github.event.inputs.flavor == 'free' && secrets.FIREBASE_APP_ID_FREE || secrets.FIREBASE_APP_ID_PRO }}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          groups: testers
          # The path to the APK file is constructed dynamically based on the selected flavor and build type.
          file: app/build/outputs/apk/${{ github.event.inputs.flavor }}/${{ github.event.inputs.buildType }}/app-${{ github.event.inputs.flavor }}-${{ github.event.inputs.buildType }}.apk
